// SPDX-FileCopyrightText: 2025 StarkWare Industries Ltd.
//
// SPDX-License-Identifier: MIT

#ifndef PROOF_SIMF
#define PROOF_SIMF

#include "poly/evaluations.simf"
#include "poly/line.simf"
#include "vcs/merkle.simf"

// Select the constraints
#include "constraints/wide_fibonacci.simf"

#define MAX_FRI_LAYERS 16
#define MAX_FRI_QUERIES 32

/// FRI layer (first and inner)
/// * commitment
/// * folding alpha
/// * domain size
type FriLayer = (u256, QM31, u32);

/// FRI layers:
/// * first layer
/// * inner layers (up to MAX_FRI_LAYERS - 1)
/// * last layer (line polynomial coefficients)
type FriLayers = (FriLayer, List<FriLayer, MAX_FRI_LAYERS>, LinePoly);

/// Commitments:
/// * const (preprocessed) root
/// * trace root
/// * composition polynomial root
type Commitments = (u256, u256, u256);

/// Composition polynomial decommitment:
/// * partitioned evaluations in M31
/// * Merkle proof
type CpDecommitment = (CPEvalM31, MerkleProof32);

/// Trace decommitment:
/// * evaluations in M31
/// * Merkle proof
type TraceDecommitment = (TraceEvalsM31, MerkleProof32);

/// Decommitment:
/// * trace decommitment
/// * composition polynomial decommitment
type Decommitment = (TraceDecommitment, CpDecommitment);

/// Decommitments:
/// * decommitments for each FRI query
type Decommitments = List<Decommitment, MAX_FRI_QUERIES>;

/// Proof:
/// * trace log size
/// * commitments
/// * OODS trace evaluations and CP evaluation (partitioned) at OODS point
/// * FRI layers
/// * PoW nonce
type Proof = (
    u8,
    Commitments,
    Decommitments,
    OodsEvals,
    FriLayers,
    u64,
);

#endif
